<!--userinfo.ui-->
<template>
  <ui-page page-load="{{ pageLoad }}">

    <ui-nav-bar slot="nav-bar" class="nav_bar">
      <ui-row height="46">
        <ui-col vertical-align="middle" align="left" space-left="10" width="50" bindtap="navigateBack">
          <ui-icon type="arrow-left" size="20" color="#126DFE"></ui-icon>
        </ui-col>
        <ui-col vertical-align="middle" align="center">
          <ui-view class="nav_title">账户信息</ui-view>
        </ui-col>
        <ui-col vertical-align="middle" align="center" width="50"></ui-col>
      </ui-row>
    </ui-nav-bar>

    <ui-row height="50" class="userInfo_list2" space-top="10" bindtap="uploadPhoto">
      <ui-col vertical-align="middle" space-left="15">
        头像
      </ui-col>
      <ui-col vertical-align="middle" align="right" space-right="15">
        <ui-view class="portrait">
          <ui-image src="{{ portraitUrl }}" width="40" height="40"></ui-image>
          <ui-icon type="arrow-right" size="16" color="#656565"></ui-icon>
        </ui-view>
      </ui-col>
    </ui-row>
    <ui-row height="50" class="userInfo_list2" bindtap="setUserInfo('用户名')">
      <ui-col vertical-align="middle" space-left="15">
        真实姓名
      </ui-col>
      <ui-col vertical-align="middle" align="right" space-right="15">
        <ui-view class="active2" ui:if=" userRealName === '' "> 未设置 </ui-view>
        <ui-view class="active" ui:else> {{ userRealName }} </ui-view>
      </ui-col>
    </ui-row>
    <!-- 注释掉昵称 -->
    <!-- <ui-row height="50" class="userInfo_list2" bindtap="setUserInfo('昵称')">
      <ui-col vertical-align="middle" space-left="15">
        昵称
      </ui-col>
      <ui-col vertical-align="middle" align="right" space-right="15">
        <ui-view class="active2" ui:if=" userNickName === '' "> 未设置 </ui-view>
        <ui-view class="active" ui:else> {{ userNickName }} </ui-view>
      </ui-col>
    </ui-row> -->
    <ui-row height="50" class="userInfo_list">
      <ui-col vertical-align="middle" space-left="15">
        工号
      </ui-col>
      <ui-col vertical-align="middle" align="right" space-right="15">
        <ui-view class="active"> {{ userId }} </ui-view>
      </ui-col>
    </ui-row>

    <ui-row height="40">
      <ui-col vertical-align="middle" align="left">
        <ui-view class="list_title">账号绑定</ui-view>
      </ui-col>
    </ui-row>
    <ui-row height="50" class="userInfo_list2">
      <ui-col width="50" vertical-align="middle" align="center">
        <ui-icon type="phone1" color="#1E94FF" size="20"></ui-icon>
      </ui-col>
      <ui-col vertical-align="middle">
        手机
      </ui-col>
      <ui-col vertical-align="middle" align="right" space-right="15">
        <ui-view class="active">{{ userTel }}
          <ui-icon type="arrow-right" size="16" color="#656565"></ui-icon>
        </ui-view>
      </ui-col>
    </ui-row>
    <ui-row height="50" class="userInfo_list2">
      <ui-col width="50" vertical-align="middle" align="center">
        <ui-icon type="weixin" color="#37B431" size="20"></ui-icon>
      </ui-col>
      <ui-col vertical-align="middle">
        微信
      </ui-col>
      <ui-col vertical-align="middle" align="right" space-right="15">
        <ui-view class="active">已绑定
          <ui-icon type="arrow-right" size="16" color="#656565"></ui-icon>
        </ui-view>
      </ui-col>
    </ui-row>
    <ui-row height="50" class="userInfo_list2">
      <ui-col width="50" vertical-align="middle" align="center">
        <ui-icon type="qq" color="#1F96FF" size="20"></ui-icon>
      </ui-col>
      <ui-col vertical-align="middle">
        QQ
      </ui-col>
      <ui-col vertical-align="middle" align="right" space-right="15">
        <ui-view class="active2">未绑定
          <ui-icon type="arrow-right" size="16" color="#656565"></ui-icon>
        </ui-view>
      </ui-col>
    </ui-row>

    <ui-row height="40">
      <ui-col vertical-align="middle" align="left">
        <ui-view class="list_title">安全设置</ui-view>
      </ui-col>
    </ui-row>
    <ui-row height="50" class="userInfo_list2">
      <ui-col vertical-align="middle" space-left="15">
        登录密码
      </ui-col>
      <ui-col vertical-align="middle" align="right" space-right="15">
        <ui-view class="active">修改
          <ui-icon type="arrow-right" size="16" color="#656565"></ui-icon>
        </ui-view>
      </ui-col>
    </ui-row>
    <ui-row height="50" class="userInfo_list2" bindtap="faceRecognition">
      <ui-col vertical-align="middle" space-left="15">
        人脸签到
      </ui-col>
      <ui-col vertical-align="middle" align="right" space-right="15">
        <ui-view style="color:red" class="active2" ui:if=" isHasFaceImg === '' ">
          <ui-icon type="setting2" size="16" color="red"></ui-icon>
          请上传人脸照片
          <ui-icon type="arrow-right" size="16" color="#656565"></ui-icon>
        </ui-view>
        <ui-view class="active" ui:else>
          <ui-icon type="renlian2" size="16" color="#1890ff"></ui-icon>
          已上传
          <ui-icon type="arrow-right" size="16" color="#656565"></ui-icon>
        </ui-view>
      </ui-col>
    </ui-row>
    <ui-row height="50" class="userInfo_list">
      <ui-col vertical-align="middle" space-left="15">
        实名认证
      </ui-col>
      <ui-col vertical-align="middle" align="right" space-right="15">
        <ui-view class="active2">未认证
          <ui-icon type="arrow-right" size="16" color="#656565"></ui-icon>
        </ui-view>
      </ui-col>
    </ui-row>
  </ui-page>
</template>


<script>
  // userinfo.js
  const sourceType = [
    ['camera'],
    ['album'],
    ['camera', 'album']
  ]
  const sizeType = [
    ['compressed'],
    ['original'],
    ['compressed', 'original']
  ]
  const uploadAvatarUrl = 'user/avatar/base64' // 上传用户头像照片
  const getAvatarUrl = 'user/avatar/base64' // 获取用户头像照片

  // 压缩图片库
  import lrz from '#/static/utils/lrz'

  export default {
    config: {
      navigationStyle: "custom",
      backgroundColor: '#F2F2F2'
    },
    data() {
      return {
        portraitUrl: require('#/images/portrait_bg.png'),
        userRealName: '',
        userNickName: '',
        userTel: '',
        userId: '',
        tokenId: '',
        isHasFaceImg: '',
        pageLoad: { // 进入页面将用户信息显示在页面上
          trigger: 'always',
          handle: () => {
            console.log("用户信息 pageLoad")
            let LocalUserInfo = ui.getStorageSync('LocalUserInfo')
            console.log("LocalUserInfo:", LocalUserInfo)
            if (LocalUserInfo !== null && LocalUserInfo.tokenId !== '') {

              this.userRealName = LocalUserInfo.realName
              this.userNickName = LocalUserInfo.nickName
              this.userTel = LocalUserInfo.userTel
              this.userId = LocalUserInfo.userId
              this.tokenId = LocalUserInfo.tokenId

              this.isHasFaceImg = LocalUserInfo.isHasFaceImg ? LocalUserInfo.isHasFaceImg : ''

              if(LocalUserInfo.isHasAvatar){
                if(LocalUserInfo.avatarBase64 === ''){
                  this.getUserAvatar()
                }else{
                  this.portraitUrl = LocalUserInfo.avatarBase64
                }
              }else{
                this.portraitUrl = require('#/images/portrait_bg.png')
              }

            }
          }
        }
      }
    },
    methods: {
      navigateBack() {
        ui.navigateBack()
      },
      // 头像上传
      uploadPhoto() {
        this.chooseImage(2)
      },
      // 选择头像
      chooseImage(index) {
        let that = this
        ui.chooseImage({
          clip: true,
          sourceType: sourceType[index], // 拍照和相册
          sizeType: sizeType[0], // 压缩
          success: function (res) {

            let imagePath = res.tempFilePaths[0]

            // 开始压缩
            lrz(imagePath)
              .then(function (rst) {
                // 处理成功会执行
                console.log("压缩成功", rst)
                that.portraitUrl = rst.base64

                ui.request({
                  url: uploadAvatarUrl,
                  data: {
                    'img': that.portraitUrl.split(',')[1], // 上传去掉头部
                    // 'base64Len': base64Len
                  },
                  method: 'POST',
                  header: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + that.tokenId
                  },
                  success: (result) => {
                    if (result.data.code === 2000) {

                      console.log("头像base64编码上传成功", result)

                      ui.showToast({
                        title: '头像更新成功',
                        icon: 'success'
                      })

                      // 获取 LocalUserInfo 数据，将头像数据赋值给他
                      let LocalUserInfo = ui.getStorageSync('LocalUserInfo')
                      LocalUserInfo.isHasAvatar = true
                      LocalUserInfo.avatarBase64 = that.portraitUrl
                      ui.setStorageSync('LocalUserInfo', LocalUserInfo)

                      console.log("修改后的 LocalUserInfo :", LocalUserInfo)

                    } else {
                      ui.showToast({
                        title: '头像更新失败' + result.data.code
                      })
                    }

                  },
                  fail: function ({errMsg}) {
                    ui.showToast({
                      title: '头像更新失败' + errMsg
                    })
                    console.log("头像更新失败", errMsg)
                  }
                })
              })
              .catch(function (err) {
                // 处理失败会执行
                console.log("头像压缩失败", err)
                ui.showToast({
                  title: '头像压缩失败' + err
                })
              })
              .always(function () {
                // 不管是成功失败，都会执行
                console.log("执行压缩")
              });
          },
          fail: function ({errMsg}) {
            console.log("选择头像失败", errMsg)
            ui.showToast({
              title: '选择头像失败' + errMsg
            })
          }
        })
      },
      // 获取用户头像
      getUserAvatar () {
        console.log('获取用户头像')
        ui.request({
          url: getAvatarUrl,
          header: {
            'Content-Type': 'application/json',
            'Authorization': 'Bearer ' + this.tokenId
          },
          method: 'GET',
          success: (result) => {
            console.log("获取用户头像:",result)
            if(result.data.code === 2000){
              // console.log("获取用户头像成功:",result.data.data.img)
              this.portraitUrl = 'data:image;base64,' + result.data.data.img

              // 获取 LocalUserInfo 数据，将头像数据赋值给他
              let LocalUserInfo = ui.getStorageSync('LocalUserInfo')
              LocalUserInfo.isHasAvatar = true
              LocalUserInfo.avatarBase64 = this.portraitUrl
              ui.setStorageSync('LocalUserInfo', LocalUserInfo)
              
            }else{
              console.log("获取用户头像失败:",result)
            }
            
          },
          fail: ({ errMsg }) => {
            console.log("获取用户头像失败:",errMsg)
          }
        })
      },
      // 设置用户 姓名和昵称
      setUserInfo(value) {
        console.log("设置用户信息", value)
        if (value === "用户名") {
          ui.navigateTo({
            url: '/pages/userCenter/user/setUserName?type=用户名'
          })
        } else if (value === "昵称") {
          ui.navigateTo({
            url: '/pages/userCenter/user/setUserName?type=昵称'
          })
        } else {

        }
      },
      faceRecognition() {
        ui.navigateTo({
          url: '/pages/userCenter/user/faceRecognition'
        })
      }
    },
    mounted() {
      let LocalUserInfo = ui.getStorageSync('LocalUserInfo')
      console.log("用户信息页面：", LocalUserInfo)

      this.userRealName = LocalUserInfo.realName
      this.userNickName = LocalUserInfo.nickName
      this.userTel = LocalUserInfo.userTel
      this.userId = LocalUserInfo.userId
      this.tokenId = LocalUserInfo.tokenId

      this.isHasFaceImg = LocalUserInfo.isHasFaceImg ? LocalUserInfo.isHasFaceImg : ''

      if(LocalUserInfo.isHasAvatar){
        if(LocalUserInfo.avatarBase64 === ''){
          this.getUserAvatar()
        }else{
          this.portraitUrl = LocalUserInfo.avatarBase64
        }
      }else{
        this.portraitUrl = require('#/images/portrait_bg.png')
      }
      
    }
  }
</script>

<style lang="less">
  // userinfo.less
  .nav_bar {
    background: #fff;

    .nav_title {
      color: #000;
      font-size: 36rpx;
      font-weight: bold;
    }
  }

  .userInfo_list {
    background-color: #fff;

    .active {
      font-size: 14px;
      color: #8C8C8C;
    }

    .active2 {
      font-size: 14px;
      color: #1F95FF;
    }
  }

  .userInfo_list2 {
    background-color: #fff;
    .mix-1px(0, 0, 1, 0, #ccc);

    .active {
      font-size: 14px;
      color: #8C8C8C;
    }

    .active2 {
      font-size: 14px;
      color: #1F95FF;
    }

    .portrait {
      display: flex;

      .ui-image {
        border-radius: 50%;
      }

      .ui-icon {
        line-height: 40px;
      }
    }
  }

  .list_title {
    font-size: 12px;
    color: #8c8c8c;
    padding-left: 15px;
  }
</style>