<template>
  <ui-page>
    <!-- 登陆 && 注册 -->
    <ui-nav-bar slot="nav-bar">
      <ui-row height="46">
        <ui-col vertical-align="middle" align="center">
          <ui-view class="nav_title">手机快速登录／注册</ui-view>
        </ui-col>
      </ui-row>
    </ui-nav-bar>

    <ui-view>
      <ui-ex-swiper speed="200" allow-touch-move="{{false}}" index="{{ currentNum }}" class="swiper_wrap" style="{{{ height : swiperHeight + 'px' }}}">
        <ui-ex-swiper-item>
          <!-- 登录内容 -->
          <ui-view class="login_wrap">
            <!-- 1 -->
            <ui-view class="portrait">
              <ui-icon type="user-img" color="#eee" size="90"></ui-icon>
            </ui-view>
            <!-- 2 -->
            <ui-view class="login_content">
              <ui-view>
                <ui-input type="number" ui:model="{{ loginTel }}" name="loginTel" placeholder="请输入手机号码"
                  placeholder-style="color:#9C9C9C"></ui-input>
              </ui-view>
              <ui-view>
                <ui-sms-input name="smsCode" ui:model="{{ loginCode }}" bindsend="loginSmsCode" init-text="短信验证码"
                  placeholder-style="color:#9C9C9C"></ui-sms-input>
              </ui-view>
              <ui-button formType="submit" type="primary" class="submit" bindtap="login" disabled="{{ loginTel&&loginCode ? false : true }}">登录</ui-button>
            </ui-view>
            <!-- 3 -->
            <ui-view class="login_bottom">
              <ui-row height="40">
                <ui-col align="right" vertical-align="top" space-right="10">
                  <ui-view class="forget_password">忘记密码</ui-view>
                </ui-col>
                <ui-col align="left" vertical-align="top" space-left="10" bindtap="registerPage">
                  <ui-view>快速注册</ui-view>
                </ui-col>
              </ui-row>
            </ui-view>
          </ui-view>
        </ui-ex-swiper-item>
        <!-- 注册内容 -->
        <ui-ex-swiper-item>
          <ui-view class="login_content2">
            <ui-row height="50" border-bottom>
              <ui-col vertical-align="bottom">
                <ui-input type="number" ui:model="{{ registerTel }}" name="tel" placeholder="请输入手机号码" maxlength="11"
                  placeholder-style="color:#9C9C9C"></ui-input>
              </ui-col>
            </ui-row>
            <ui-row height="50" border-bottom>
              <ui-col vertical-align="bottom">
                <ui-sms-input ui:model="{{ registerCode }}" init-text="获取验证码" bindsend="registerSmsCode"
                  placeholder-style="color:#9C9C9C"></ui-sms-input>
              </ui-col>
            </ui-row>
            <ui-row height="50" border-bottom>
              <ui-col vertical-align="bottom">
                <ui-input ui:model="{{ registerPassword }}" type="password" name="pwd" placeholder="请输入密码"
                  placeholder-style="color:#9C9C9C"></ui-input>
              </ui-col>
            </ui-row>
            <!-- <ui-view class="submit">下一步</ui-view> -->
            <ui-button formType="submit" type="primary" class="submit" bindtap="register" disabled="{{ registerTel&&registerCode&&registerPassword ? false : true }}">注册</ui-button>
            <ui-view class="have_account" bindtap="loginPage">已有账户，点击 <span style="color:#3399ff">登录</span></ui-view>
          </ui-view>
        </ui-ex-swiper-item>
      </ui-ex-swiper>
    </ui-view>
  </ui-page>
</template>


<script>
  // 注册接口
  const registerUrl = 'auth/register'
  // 登录接口
  const loginUrl = 'auth/login'
  // 密码加密
  import encryptRSA from '#/static/utils/security'
  // 时间处理js库
  import dayjs from '#/static/utils/dayjs'

  export default {
    config: {
      // 'navigationBarVisible': false, // 导航栏不可见
      "scrollType": "div",
      "disableScroll": true
    },
    data() {
      return {
        swiperHeight: ui.DEFAULT_CONTENT_HEIGHT, // 
        currentNum: 0, // 控制显示 登陆页面还是 注册页面，0 为登录页面
        loginTel: '13412341234', // 登陆电话
        loginCode: '123456', // 登录验证码
        registerTel: '', // 注册电话
        registerCode: '', // 注册验证码
        registerPassword: '', // 注册密码
      }
    },
    methods: {
      // 快速注册页面
      registerPage() {
        this.currentNum = 1
      },
      // 登陆页面
      loginPage() {
        this.currentNum = 0
      },
      // 登录页面 短信验证码操作
      loginSmsCode(run) {
        if (/^1[34578]\d{9}$/.test(this.loginTel)) {
          run()
          ui.showToast({
            title: '验证码已发送'
          })
        } else {
          ui.showToast({
            title: '请输入正确的手机号码'
          })
        }
      },
      // 注册页面 验证码操作
      registerSmsCode(run) {
        if (/^1[34578]\d{9}$/.test(this.registerTel)) {
          run()
          ui.showToast({
            title: '验证码已发送'
          })
        } else {
          ui.showToast({
            title: '请输入正确的手机号码'
          })
        }
      },
      // 点击登录按钮触发 操作
      login() {
        console.log("登录请求")
        // 登录请求
        ui.request({
          url: loginUrl,
          data: {
            tel: this.loginTel,
            // password: encryptRSA(this.loginPassword) // 密码加密
            password: this.loginCode // 验证码登录
          },
          method: 'POST',
          header: {
            'Content-Type': 'application/json'
          },
          success: function (result) {

            console.log("登录请求返回的数据", result)

            if (result.data.code === 10001) {
              ui.showToast({
                title: '用户名或密码错误'
              })
            } else if (result.data.code === 2002) { // 这个状态码还没确定
              ui.showToast({
                title: '手机号未注册'
              })
            } else if (result.data.code === 2000) { // 状态码为 2000 表示登录成功
              
              console.log('登录成功')

              let userInfo = result.data.data.profile
              let token = result.data.data.token

              // 登录成功后，封装成 本地数据
              let LocalUserInfo = {
                isLogin: true,
                realName: userInfo.realName ? userInfo.realName : '',
                nickName: userInfo.nickname ? userInfo.nickname : '',
                userId: userInfo.employee_id ? userInfo.employee_id : '',
                userTel: userInfo.tel,
                tokenId: token,

                registerTime: dayjs().format("YYYY-MM-DD HH:mm:ss"),
                loginTime: dayjs().format("YYYY-MM-DD HH:mm:ss"),

                isHasAvatar: userInfo.hasAvatar,
                avatarBase64: '',

                isHasFaceImg: false,
                faceImgBase64: '',
                
              }
              console.log("登录成功封装的数据 LocalUserInfo", LocalUserInfo)

              // 同时将请求的数据保存到本地
              ui.setStorageSync('LocalUserInfo', LocalUserInfo)

              ui.showToast({
                title: '登录成功',
                icon: 'success'
              })

              // app 端不允许使用swithTab 跳转到 tabBar 页面，解决方案可能就只能使用 dialog 了
              ui.redirectTo({
                url: '/pages/index',
                success: () => {
                  console.log('跳转到首页 成功')
                }
              })
              
            } else {
              // 登录失败其他的返回码。
              ui.showToast({
                title: result.data.desc
              })
            }
          },
          fail: function ({errMsg}) {
            ui.showToast({
              title: '登录失败'
            })
            console.log("登录失败：", errMsg)
          }
        })
      },
      // 注册
      register() {
        let that = this
        let pwd = this.registerPassword.toString().length
        if (pwd < 6) {
          ui.showToast({
            title: '请输入6位以上密码'
          })
        } else {
          // 注册请求
          ui.request({
            url: registerUrl,
            data: {
              tel: this.registerTel, // 手机号 + 密码
              // password: encryptRSA(this.registerPassword)
              password: this.registerPassword

            },
            method: 'POST',
            header: {
              'Content-Type': 'application/json'
            },
            success: function (result) {

              console.log("注册成功返回的数据:", result)

              if (result.data.code === 20003) {
                ui.showToast({
                  title: '手机号格式不正确'
                })
              } else if (result.data.code === 20021) {
                ui.showToast({
                  title: '手机号已注册'
                })
              } else if (result.data.code === 2000) {
                ui.showToast({
                  title: '注册成功',
                  icon: 'success'
                })
                that.currentNum = 0

              } else { // 注册失败其他的返回码。
                ui.showToast({
                  title: '注册失败\n 状态码:' + result.data.code,
                  icon: 'success'
                })
              }
            },
            fail: function ({errMsg}) {
              ui.showToast({
                title: '注册失败' + errMsg
              })
            }
          })
        }
      }
    },
    mounted() {

    }
  }
</script>

<style lang="less">
  // loginInterface.less
  .ui-nav-bar {
    width: 100%;
    background-color: #fff;
  }

  .nav_title {
    color: #A5A5A5;
    font-size: 16px;
  }

  .swiper_wrap {
    background-color: #ffffff;
    height: 100%;

    .ui-ex-swiper-item {
      position: relative
    }
  }

  .ui-sms-input {
    .cell-left {
      display: none;
    }
  }

  .login_wrap {
    height: 100%;
    padding-top: 20px;
  }

  .portrait {
    .mix-flex-center();
    height: 100px;
  }

  .login_content {
    flex: 0 0 500rpx;
    background: #fff;
    padding: 0 20px;

    .ui-input {
      border: 0;
      margin: 10px 0 5px 0;
    }

    .ui-view {
      border-bottom: 1px solid #EBEBEB;
    }

    .submit {
      margin-top: 100rpx;
    }
  }

  .login_bottom {
    // background: black;
    width: 100%;
    position: absolute;
    bottom: 30px;

    .ui-view {
      font-size: 14px;
      color: #9C9C9C;
    }

    .forget_password {
      color: #D4D4D4;
    }
  }

  .login_content2 {
    padding: 50px 20px 0 20px;

    .ui-input {
      border: 0;
    }

    .submit {
      margin-top: 50px;
    }

    .ui-row {
      .ui-view {
        color: #A5A5A5;
      }
    }

    .have_account {
      line-height: 30px;
      display: inline-block;
      color: #9C9C9C;
    }
  }
</style>